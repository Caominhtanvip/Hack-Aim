--[[

    Universal Aimbot Module by Exunys © CC0 1.0 Universal (2023 - 2024)
    https://github.com/Exunys

]]

--// Cache

local game, workspace = game, workspace
local getrawmetatable, getmetatable, setmetatable, pcall, getgenv, next, tick = getrawmetatable, getmetatable, setmetatable, pcall, getgenv, next, tick
local Vector2new, Vector3zero, CFramenew, Color3fromRGB, Color3fromHSV, Drawingnew, TweenInfonew = Vector2.new, Vector3.zero, CFrame.new, Color3.fromRGB, Color3.fromHSV, Drawing.new, TweenInfo.new
local getupvalue, mousemoverel, tablefind, tableremove, stringlower, stringsub, mathclamp = debug.getupvalue, mousemoverel or (Input and Input.MouseMove), table.find, table.remove, string.lower, string.sub, math.clamp

local GameMetatable = getrawmetatable and getrawmetatable(game) or {
    __index = function(self, Index)
        return self[Index]
    end,
    __newindex = function(self, Index, Value)
        self[Index] = Value
    end
}

local __index = GameMetatable.__index
local __newindex = GameMetatable.__newindex

local getrenderproperty, setrenderproperty = getrenderproperty or __index, setrenderproperty or __newindex

local GetService = __index(game, "GetService")

--// Services

local RunService = GetService(game, "RunService")
local UserInputService = GetService(game, "UserInputService")
local TweenService = GetService(game, "TweenService")
local Players = GetService(game, "Players")

local LocalPlayer = __index(Players, "LocalPlayer")
local Camera = __index(workspace, "CurrentCamera")

local FindFirstChild, FindFirstChildOfClass = __index(game, "FindFirstChild"), __index(game, "FindFirstChildOfClass")
local GetDescendants = __index(game, "GetDescendants")
local WorldToViewportPoint = __index(Camera, "WorldToViewportPoint")
local GetPartsObscuringTarget = __index(Camera, "GetPartsObscuringTarget")
local GetMouseLocation = __index(UserInputService, "GetMouseLocation")
local GetPlayers = __index(Players, "GetPlayers")

local RequiredDistance, Typing, Running, ServiceConnections, Animation, OriginalSensitivity = 2000, false, false, {}
local Connect, Disconnect = __index(game, "DescendantAdded").Connect

if ExunysDeveloperAimbot and ExunysDeveloperAimbot.Exit then
    ExunysDeveloperAimbot:Exit()
end

getgenv().ExunysDeveloperAimbot = {
    DeveloperSettings = {
        UpdateMode = "RenderStepped",
        TeamCheckOption = "TeamColor",
        RainbowSpeed = 1
    },

    Settings = {
        Enabled = true,
        TeamCheck = true, -- bật team check cho aimbot
        AliveCheck = true,
        WallCheck = false,
        OffsetToMoveDirection = false,
        OffsetIncrement = 15,
        Sensitivity = 0,
        Sensitivity2 = 3.5,
        LockMode = 1,
        LockPart = "Head",
        TriggerKey = Enum.UserInputType.MouseButton2,
        Toggle = false
    },

    FOVSettings = {
        Enabled = true,
        Visible = true,
        Radius = 90,
        NumSides = 60,
        Thickness = 1,
        Transparency = 1,
        Filled = false,
        RainbowColor = false,
        RainbowOutlineColor = false,
        Color = Color3fromRGB(255, 255, 255),
        OutlineColor = Color3fromRGB(0, 0, 0),
        LockedColor = Color3fromRGB(255, 150, 150)
    },

    Blacklisted = {},
    FOVCircleOutline = Drawingnew("Circle"),
    FOVCircle = Drawingnew("Circle")
}

local Environment = getgenv().ExunysDeveloperAimbot
setrenderproperty(Environment.FOVCircle, "Visible", false)
setrenderproperty(Environment.FOVCircleOutline, "Visible", false)

---------------------------------------------------------------------
-- Thêm phần ESP box + team check riêng biệt không đụng tới aimbot --
---------------------------------------------------------------------

local ESP_Boxes = {}

local function CreateESPBox(player)
    if ESP_Boxes[player] then return end

    local box = Drawingnew("Square")
    box.Thickness = 1
    box.Transparency = 1
    box.Visible = true
    ESP_Boxes[player] = box
end

local function RemoveESPBox(player)
    if ESP_Boxes[player] then
        ESP_Boxes[player]:Remove()
        ESP_Boxes[player] = nil
    end
end

RunService.RenderStepped:Connect(function()
    for _, player in ipairs(GetPlayers(Players)) do
        if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") and player.Character:FindFirstChildOfClass("Humanoid") then
            local hrp = player.Character:FindFirstChild("HumanoidRootPart")
            local hum = player.Character:FindFirstChildOfClass("Humanoid")

            if hum.Health <= 0 then
                RemoveESPBox(player)
                continue
            end

            CreateESPBox(player)

            local vector, onScreen = WorldToViewportPoint(Camera, hrp.Position)
            if onScreen then
                local size = 3
                local distance = (Camera.CFrame.Position - hrp.Position).Magnitude
                local scale = math.clamp(200 / distance, 2, 300)

                local width = 20 * scale
                local height = 40 * scale

                ESP_Boxes[player].Size = Vector2new(width, height)
                ESP_Boxes[player].Position = Vector2new(vector.X - width / 2, vector.Y - height / 2)
                ESP_Boxes[player].Visible = true

                -- Phân biệt team - enemy
                if player.Team == LocalPlayer.Team then
                    ESP_Boxes[player].Color = Color3fromRGB(0, 255, 0)
                else
                    ESP_Boxes[player].Color = Color3fromRGB(255, 0, 0)
                end
            else
                ESP_Boxes[player].Visible = false
            end
        else
            RemoveESPBox(player)
        end
    end
end)

--------------------------------------------------------------
-- Giữ nguyên toàn bộ phần load aimbot gốc như bạn yêu cầu --
--------------------------------------------------------------

local FixUsername = function(String)
    local Result
    for _, Value in next, GetPlayers(Players) do
        local Name = __index(Value, "Name")
        if stringsub(stringlower(Name), 1, #String) == stringlower(String) then
            Result = Name
        end
    end
    return Result
end

local GetRainbowColor = function()
    local RainbowSpeed = Environment.DeveloperSettings.RainbowSpeed
    return Color3fromHSV(tick() % RainbowSpeed / RainbowSpeed, 1, 1)
end

local ConvertVector = function(Vector)
    return Vector2new(Vector.X, Vector.Y)
end

local CancelLock = function()
    Environment.Locked = nil
    local FOVCircle = Environment.FOVCircle
    setrenderproperty(FOVCircle, "Color", Environment.FOVSettings.Color)
    __newindex(UserInputService, "MouseDeltaSensitivity", OriginalSensitivity)
    if Animation then
        Animation:Cancel()
    end
end

local GetClosestPlayer = function()
    local Settings = Environment.Settings
    local LockPart = Settings.LockPart

    if not Environment.Locked then
        RequiredDistance = Environment.FOVSettings.Enabled and Environment.FOVSettings.Radius or 2000

        for _, Value in next, GetPlayers(Players) do
            local Character = __index(Value, "Character")
            local Humanoid = Character and FindFirstChildOfClass(Character, "Humanoid")
            if Value ~= LocalPlayer and not tablefind(Environment.Blacklisted, __index(Value, "Name")) and Character and FindFirstChild(Character, LockPart) and Humanoid then
                local PartPosition = __index(Character[LockPart], "Position")
                if Settings.TeamCheck and Value.Team == LocalPlayer.Team then
                    continue
                end
                if Settings.AliveCheck and __index(Humanoid, "Health") <= 0 then
                    continue
                end
                local Vector, OnScreen, Distance = WorldToViewportPoint(Camera, PartPosition)
                Vector = ConvertVector(Vector)
                Distance = (GetMouseLocation(UserInputService) - Vector).Magnitude
                if Distance < RequiredDistance and OnScreen then
                    RequiredDistance, Environment.Locked = Distance, Value
                end
            end
        end
    elseif (GetMouseLocation(UserInputService) - ConvertVector(WorldToViewportPoint(Camera, __index(__index(__index(Environment.Locked, "Character"), LockPart), "Position")))).Magnitude > RequiredDistance then
        CancelLock()
    end
end

local Load = function()
    OriginalSensitivity = __index(UserInputService, "MouseDeltaSensitivity")
    local Settings, FOVCircle, FOVCircleOutline, FOVSettings, Offset = Environment.Settings, Environment.FOVCircle, Environment.FOVCircleOutline, Environment.FOVSettings
    ServiceConnections.RenderSteppedConnection = Connect(__index(RunService, Environment.DeveloperSettings.UpdateMode), function()
        if FOVSettings.Enabled and Settings.Enabled then
            for Index, Value in next, FOVSettings do
                if Index == "Color" then continue end
                if pcall(getrenderproperty, FOVCircle, Index) then
                    setrenderproperty(FOVCircle, Index, Value)
                    setrenderproperty(FOVCircleOutline, Index, Value)
                end
            end
            setrenderproperty(FOVCircle, "Color", (Environment.Locked and FOVSettings.LockedColor) or FOVSettings.Color)
            setrenderproperty(FOVCircleOutline, "Color", FOVSettings.OutlineColor)
            setrenderproperty(FOVCircleOutline, "Thickness", FOVSettings.Thickness + 1)
            setrenderproperty(FOVCircle, "Position", GetMouseLocation(UserInputService))
            setrenderproperty(FOVCircleOutline, "Position", GetMouseLocation(UserInputService))
        else
            setrenderproperty(FOVCircle, "Visible", false)
            setrenderproperty(FOVCircleOutline, "Visible", false)
        end
        if Running and Settings.Enabled then
            GetClosestPlayer()
            if Environment.Locked then
                local LockedPosition_Vector3 = __index(__index(Environment.Locked, "Character")[Settings.LockPart], "Position")
                local LockedPosition = WorldToViewportPoint(Camera, LockedPosition_Vector3)
                if Environment.Settings.LockMode == 2 then
                    mousemoverel((LockedPosition.X - GetMouseLocation(UserInputService).X) / Settings.Sensitivity2, (LockedPosition.Y - GetMouseLocation(UserInputService).Y) / Settings.Sensitivity2)
                else
                    if Settings.Sensitivity > 0 then
                        Animation = TweenService:Create(Camera, TweenInfonew(Settings.Sensitivity, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {CFrame = CFramenew(Camera.CFrame.Position, LockedPosition_Vector3)})
                        Animation:Play()
                    else
                        __newindex(Camera, "CFrame", CFramenew(Camera.CFrame.Position, LockedPosition_Vector3))
                    end
                    __newindex(UserInputService, "MouseDeltaSensitivity", 0)
                end
                setrenderproperty(FOVCircle, "Color", FOVSettings.LockedColor)
            end
        end
    end)

    ServiceConnections.InputBeganConnection = Connect(__index(UserInputService, "InputBegan"), function(Input)
        local TriggerKey, Toggle = Settings.TriggerKey, Settings.Toggle
        if Typing then return end
        if Input.UserInputType == Enum.UserInputType.Keyboard and Input.KeyCode == TriggerKey or Input.UserInputType == TriggerKey then
            if Toggle then
                Running = not Running
                if not Running then CancelLock() end
            else
                Running = true
            end
        end
    end)

    ServiceConnections.InputEndedConnection = Connect(__index(UserInputService, "InputEnded"), function(Input)
        local TriggerKey, Toggle = Settings.TriggerKey, Settings.Toggle
        if Toggle or Typing then return end
        if Input.UserInputType == Enum.UserInputType.Keyboard and Input.KeyCode == TriggerKey or Input.UserInputType == TriggerKey then
            Running = false
            CancelLock()
        end
    end)
end

ServiceConnections.TypingStartedConnection = Connect(__index(UserInputService, "TextBoxFocused"), function() Typing = true end)
ServiceConnections.TypingEndedConnection = Connect(__index(UserInputService, "TextBoxFocusReleased"), function() Typing = false end)

function Environment.Exit(self)
    for Index, _ in next, ServiceConnections do Disconnect(ServiceConnections[Index]) end
    self.FOVCircle:Remove()
    self.FOVCircleOutline:Remove()
    for _, v in pairs(ESP_Boxes) do v:Remove() end
    ESP_Boxes = {}
    getgenv().ExunysDeveloperAimbot = nil
end

function Environment.Restart()
    for Index, _ in next, ServiceConnections do Disconnect(ServiceConnections[Index]) end
    Load()
end

function Environment.GetClosestPlayer()
    GetClosestPlayer()
    local Value = Environment.Locked
    CancelLock()
    return Value
end

Environment.Load = Load
setmetatable(Environment, {__call = Load})
return Environment
